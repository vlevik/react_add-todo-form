{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","todosWithUsers","userId","usersFromServer","find","App","useState","currentTitle","setCurrentTitle","currentUserId","setCurrentUserId","hasNameError","setHasNameError","hasUserError","setHasUserError","currentTodoList","setCurrentTodoList","action","method","onSubmit","event","preventDefault","Math","max","handleSubmit","htmlFor","type","placeholder","value","onChange","target","handleTitle","handleUser","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.969f7e27.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../api/types';\n\ntype Props = {\n  user: User | undefined\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { TodoWithUser } from '../../api/types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n\n  );\n};\n","import { TodoWithUser } from '../../api/types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nconst todosWithUsers = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [currentTitle, setCurrentTitle] = useState('');\n  const [currentUserId, setCurrentUserId] = useState(0);\n\n  const [hasNameError, setHasNameError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const [currentTodoList, setCurrentTodoList] = useState(todosWithUsers);\n\n  function handleTitle(event: React.ChangeEvent<HTMLInputElement>) {\n    setCurrentTitle(event.target.value);\n    setHasNameError(false);\n  }\n\n  function handleUser(event: React.ChangeEvent<HTMLSelectElement>) {\n    setCurrentUserId(+event.target.value);\n    setHasUserError(false);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (!currentTitle) {\n      setHasNameError(true);\n    }\n\n    if (!currentUserId) {\n      setHasUserError(true);\n    }\n\n    if (currentTitle && currentUserId) {\n      setCurrentTodoList([...currentTodoList, {\n        id: (Math.max(...currentTodoList.map(todo => todo.id)) + 1),\n        title: currentTitle,\n        completed: false,\n        userId: currentUserId,\n        user: usersFromServer.find(user => user.id === currentUserId),\n      }]);\n\n      setCurrentTitle('');\n      setCurrentUserId(0);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={event => handleSubmit(event)}\n      >\n        <div className=\"field\">\n          <label\n            htmlFor=\"title\"\n          >\n            Title:&nbsp;\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            id=\"title\"\n            value={currentTitle}\n            onChange={event => handleTitle(event)}\n          />\n          {hasNameError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"user\"\n          >\n            User:&nbsp;\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={currentUserId}\n            onChange={event => handleUser(event)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={currentTodoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}